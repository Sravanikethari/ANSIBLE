1) tags - used to organize and control the execution of tasks and plays within a playbook. They allow you to selectively run or skip certain parts of a playbook without having to execute the entire playbook.
   Example:
     - hosts: all
  tasks:
    - name: install apache
      yum: name=httpd state=present
      tags: 1

    - name: restart apache
      service: name=httpd state=started
      tags: 2

    - name: create user
      user: name=vishu state=present
      tags: 3

    - name: copy file
      copy: src=raham.txt dest=/opt
      tags: 4

 SINGLE TAG: ansible-playbook playbook1.yml --tags 1
 MULTI TAGS: ansible-playbook playbook1.yml --tags 2,3

2) CLUSTERS- A cluster in computing typically refers to a set of independent machines (also known as nodes) that work together as a single system.
   types-  homogenius cluster	: all servers have same os flavours
           heterogenius cluster	: all servers have different os flavours
   Examples:
    - hosts: all
  tasks:
    - name: install apache on redhat
      yum: name=httpd state=present
      when: ansible_os_family == "RedHat"

    - name: install apache on ubuntu
      apt: name=apache2 state=present
      when: ansible_os_family == "Debian"

3) HANDLERS-  special type of task that only run when notified by other tasks.
   Example:
    - hosts: all
  tasks:
    - name: install httpd
      yum: name=httpd state=present
      notify: restart httpd

  handlers:
    - name: restart httpd
      service: name=httpd state=started
4) LOOPS- allow to do repeat a task multiple times with different inputs.
   Example:
    - hosts: all
  tasks:
    - name: install packages
      yum: name={{item}} state=present
      with_items:
        - git
        - java-1.8.0-openjdk
        - docker
        - httpd
        - maven

5) ROLES- Its a way of organizing the playbooks,it will encapsulate the data.Roles will divide the playbook and reduce length. It is used to execute the playbook from directories.
Example:
mkdir playbook
cd playbook/
mkdir -p roles/pkgs/tasks/
vim roles/pkgs/tasks/main.yml

vim master.yml
- hosts: test[1]
  roles:
    - abc

tree structure:

.
├── master.yml
└── roles
    ├── abc
    │   └── tasks
    │       └── main.yml
    ├── pkgs
    │   └── tasks
    │       └── main.yml
    └── users
        └── tasks
            └── main.yml


cat roles/pkgs/tasks/main.yml

- name: installing pkgs
  yum: name=git state=present
  yum: name=maven state=present
  yum: name=httpd state=present


cat roles/users/tasks/main.yml

- name: creating users
  user: name={{item}} state=present
  with_items:
    - ashrin
    - sravani

6) ANSIBLE GALAXY- Its a place to store all the ansible roles. We can use other people roles also here.It will consist the community roles.
   Examples:
 ansible-galaxy search java
 ansible-galaxy install amtega.java
 ansible-galaxy search tomcat

7)ANSIBLE VAULT- It is used to secure the playbooks/files.Data will be encrypted.
  Example:
    vim playbook1.yml

      - hosts: all
        tasks:
        - name: pkg installation
          yum: name=tree state=present

   ansible-vault create creds.txt	: to create a vault file.
   ansible-vault edit creds.txt	: to edit a vault file.
   ansible-vault rekey creds.txt	: to change password for a vault file.
   ansible-vault encrypt creds.txt	: to encrypt the file.
   ansible-vault decrypt creds.txt	: to decrypt the file.
   ansible-vault view creds.txt	: to show the content without decrypt.

8)ASYNCHRONOUS ACTIONS & POLLING- we use this for restricting the task for particular timewithin in the requested time only the task need to be complete.If it takes more than requested time task will be failed
 Example:
  - hosts: all
  tasks:
    - name: install git
      command: sleep 40
      async: 30
      poll: 10

    - name: install maven
      yum: name=maven state=present




    





     
